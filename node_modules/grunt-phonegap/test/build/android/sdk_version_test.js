(function() {
  var grunt, helpers, path, xmlParser;

  grunt = require('grunt');

  xmlParser = require('xml2json');

  path = require('path');

  helpers = require(path.join(__dirname, '..', '..', '..', 'tasks', 'helpers'))(grunt);

  if (helpers.canBuild('android')) {
    exports.phonegap = {
      'targetSdkVersion in AndroidManifest.xml should match config.targetSdkVersion': function(test) {
        var data, manifest, targetSdkVersion, xml;
        test.expect(1);
        data = grunt.config.get('phonegap.config.targetSdkVersion');
        if (grunt.util.kindOf(data) === 'function') {
          targetSdkVersion = data();
        }
        xml = grunt.file.read('test/phonegap/platforms/android/AndroidManifest.xml');
        manifest = xmlParser.toJson(xml, {
          object: true
        });
        test.equal(targetSdkVersion, manifest['manifest']['uses-sdk']['android:targetSdkVersion'], 'targetSdkVersion value should match');
        return test.done();
      },
      'minSdkVersion in AndroidManifest.xml should match config.minSdkVersion': function(test) {
        var data, manifest, minSdkVersion, xml;
        test.expect(1);
        data = grunt.config.get('phonegap.config.minSdkVersion');
        if (grunt.util.kindOf(data) === 'function') {
          minSdkVersion = data();
        }
        xml = grunt.file.read('test/phonegap/platforms/android/AndroidManifest.xml');
        manifest = xmlParser.toJson(xml, {
          object: true
        });
        test.equal(minSdkVersion, manifest['manifest']['uses-sdk']['android:minSdkVersion'], 'targetSdkVersion value should match');
        return test.done();
      }
    };
  }

}).call(this);
