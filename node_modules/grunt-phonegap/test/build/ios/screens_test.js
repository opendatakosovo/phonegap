(function() {
  var grunt, hash_file, helpers, orig, path, res, screens, tests;

  grunt = require('grunt');

  path = require('path');

  hash_file = require('hash_file');

  helpers = require(path.join(__dirname, '..', '..', '..', 'tasks', 'helpers'))(grunt);

  if (helpers.canBuild('ios')) {
    tests = {};
    orig = path.join('test', 'fixtures', 'www');
    res = path.join('test', 'phonegap', 'platforms', 'ios', 'TestFixtureApp', 'Resources', 'splash');
    screens = [[path.join(orig, 'screen-ipad-landscape-2x.png'), path.join(res, 'Default-Landscape@2x~ipad.png')], [path.join(orig, 'screen-ipad-landscape.png'), path.join(res, 'Default-Landscape~ipad.png')], [path.join(orig, 'screen-ipad-portrait-2x.png'), path.join(res, 'Default-Portrait@2x~ipad.png')], [path.join(orig, 'screen-ipad-portrait.png'), path.join(res, 'Default-Portrait~ipad.png')], [path.join(orig, 'screen-iphone-portrait-2x.png'), path.join(res, 'Default@2x~iphone.png')], [path.join(orig, 'screen-iphone-portrait.png'), path.join(res, 'Default~iphone.png')], [path.join(orig, 'screen-iphone-568h-2x.png'), path.join(res, 'Default-568h@2x~iphone.png')]];
    screens.forEach(function(pair) {
      return tests["ios screen " + pair[0]] = function(test) {
        test.expect(3);
        test.ok(grunt.file.isFile(pair[0]), "" + pair[0] + " does not exist");
        test.ok(grunt.file.isFile(pair[1]), "" + pair[1] + " does not exist");
        return hash_file(pair[0], 'sha1', (function(_this) {
          return function(err, src) {
            return hash_file(pair[1], 'sha1', function(err, dest) {
              test.equal(dest, src, "hash should match for " + pair[0] + " => " + pair[1]);
              return test.done();
            });
          };
        })(this));
      };
    });
    exports.group = tests;
  }

}).call(this);
